---
- name: Wipe out Docker configuration
  hosts: nodes
  become: true
  tasks:
    - name: Stop and disable Docker service
      service: name=docker enabled=no state=stopped

    - name: Remove all local data
      shell:
        find \
        /var/lib/docker/* \
        -maxdepth 1 -print 2> /dev/null | xargs rm -rf
      args:
        warn: false
      failed_when: false
      changed_when: false

    - name: Reset Docker proxy configuration
      lineinfile:
        state=absent
        dest=/etc/sysconfig/docker
        regexp='(NO_PROXY|HTTP_PROXY|HTTPS_PROXY)=.*'

    - name: Reset Docker registry configuration
      lineinfile:
        state=absent
        dest=/etc/sysconfig/docker
        regexp='(ADD_REGISTRY|BLOCK_REGISTRY|INSECURE_REGISTRY)=.*'

    - name: Remove Docker storage configuration
      file: path=/etc/sysconfig/docker-storage state=absent

    - name: Detect Docker PVs
      shell: pvs -o pv_name,vg_name | awk '/docker/ {print $1}'
      register: docker_pv_names
      failed_when: false
      changed_when: false

    - name: Detect Docker disks
      shell: echo {{ item }} | tr -d '[0-9]'
      with_items: "{{ docker_pv_names.stdout_lines }}"
      when: docker_pv_names.stdout != ""
      register: docker_disk_names
      failed_when: false
      changed_when: false

    - name: Remove Docker PVs
      command: pvremove -ffy {{ item }}
      with_items: "{{ docker_pv_names.stdout_lines }}"
      when: docker_pv_names.stdout != ""

    - name: Wipe Docker disk signatures
      command: wipefs --all --force {{ item }}
      with_items: "{{ docker_disk_names.results | map(attribute='stdout_lines') | list }}"
      when: docker_pv_names.stdout != ""

    - name: Reset Docker disks
      command: dd if=/dev/zero of={{ item }} bs=1M count=4
      with_items: "{{ docker_disk_names.results | map(attribute='stdout_lines') | list }}"
      when: docker_pv_names.stdout != ""
